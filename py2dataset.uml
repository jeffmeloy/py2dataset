@startuml
'Used to create py2dataset.png from https://www.plantuml.com/plantuml/uml'
: python py2dataset.py 

def main():
    Command-line entry point for processing Python files and generating datasets.
    Supported command-line arguments:
    --start <starting directory>: Starting directory for Python files or GitHub repository Python files. Defaults to current working directory.
    --output_dir <output directory>: Directory to write the output files. Defaults to ./dataset/.
    --questions_pathname <question file pathname>: Path and filename of the questions file. Defaults to ./py2dataset_questions.json.
    --model_config_pathname <model configuration file pathname>: Path and filename of the model configuration file. Defaults to ./py2dataset_model_config.yaml.
    --use_llm: Use llm for generating JSON answers. Defaults to False.
    --quiet: Limit logging output. Defaults to False.
    --single_process: Use a single process to process Python files. Defaults to False.
    --detailed: Include detailed analysis. Defaults to False.
    --html: Generate HTML output. Defaults to False.
    --skip_regenration: Skip regeneration of existing instruction.json. Defaults to False
    --I: Interactive mode. Defaults to False.;

:py2dataset.py:
- Parse command line arguments
- Read questions
- Obtain Python File listing within <starting directory>;

Repeat :For each Python file;

:get_python_file_details.py:
- Extract code details from AST
- Generate code relationship graphs;
:get_python_dataset.py: 
- Answer questions and format answers;

Repeat :For each question;
:Use the AST obtained data to answer question;
if (use_llm and purpose question) then (yes)
  :Use the llm to describe the code's purpose;
  if (detailed) then (yes)
    :Use llm to describe purpose and signifiance of each code object;
  else (no)
  endif
else (no)
endif
     
:Construct instruct.json data
- instruction = current question
- input = code element
- output = answer to current question;

Repeat while (More questions?) is (yes)
->no;

:save_output.py:
save datasets and code file details
- <filename>.instruct.json
- <filename>.details.yaml';

:Save code graph
- <filename>.external.png;

Repeat while (More Python Files?) is (yes)
->no;

:Combine all qa and instruct JSON files and create other datasets
- `instruct.json` - instruction/input/output dataset
- `instruct.html` - html formated file, if --html
- `train.json` - instruction/output dataset, if --use_llm
- `train.html` - html formated file, if --html;

:End;

@enduml